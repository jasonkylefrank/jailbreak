{
  "name": "jailbreak",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "//------- HELPERS --------": "Usually to be called by other scripts",
    "//firebase-emulate": "Runs Firebase emulators, importing data on-load & exporting on exit.",
    "firebase-emulate": "firebase emulators:start  --import=./emulator-data  --export-on-exit",
    
    "//next-dev": "Runs the Next.js hot-reloading front-end dev build & server. Need this as a helper so we can run it with the npm-run-all package.",
    "next-dev": "next dev",

    "//get-firebase-config": "Pulls-down the Firebase config for whatever the current Firebase CLI project context is (whichever project was specified by the last “firebase use bla” command). Code ingests this config to know which project to connect to.",
    "get-firebase-config": "firebase apps:sdkconfig web --json > ./firebase-config.json",

    "//gen-dev-local-env": "Generates an env file which will set the “use emulators” value to false (non-default for dev) so the code will connect to a real backend (only needed for certain scenarios). This env file takes precedence over other existing env files (see Next.js env variables docs). The script which calls this should also delete the generated file so it only exists for one session.",
    "gen-dev-local-env": "echo NEXT_PUBLIC_USE_FIREBASE_EMULATORS=false > .env.development.local",
    
    "//delete-gen-dev-local-env": "Deletes the temporary env file that was generated by gen-dev-local-env",
    "delete-gen-dev-local-env": "rm .env.development.local",

    "//gen-prod-local-env": "Generates an env file which will set the “use emulators” value to true so the code will connect to the Firebase emulators (only needed for certain scenarios). This env file takes precedence over other existing env files (see Next.js env variables docs). The script which calls this should also delete the generated file so it only exists for this session.",
    "gen-prod-local-env": "echo NEXT_PUBLIC_USE_FIREBASE_EMULATORS=true > .env.production.local",

    "//delete-gen-prod-local-env": "Deletes the temporary env file that was generated by gen-prod-local-env",
    "delete-gen-prod-local-env": "rm .env.production.local",


    "//------- RUNNING/BUILDING CODE ---------": "",
    "//dev": "Runs hot-reloading front-end and the Firebase emulators backend simultaneously",
    "dev": "npm run get-firebase-config  &&  npm-run-all --parallel  firebase-emulate  next-dev",

    "//dev:real-backend": "Runs hot-reloading front-end & generates environment variables which tells the code to connect to the 'real backend' instead of the emulators. Probably only needed occasionally to check for things like if a Firestore composite index is needed.",
    "dev:real-backend": "npm run gen-dev-local-env  &&  npm run get-firebase-config  &&  next dev  &&  npm run delete-gen-dev-local-env",

    "//build": "Builds front-end code for production, then exports the static assets to be deployed.",
    "build": "npm run get-firebase-config  &&  next build  &&  next export",

    "//build:emulators": "Builds front-end code for production, exports the static assets, generates a temporary env file so the Firebase emulators will be used instead of real backend",
    "build:emulators": "npm run gen-prod-local-env  &&  npm run build  &&  npm run firebase-emulate  &&  npm run delete-gen-prod-local-env",

    "//build:all": "Builds & exports for production: Both front-end code and Firebase cloud functions.",
    "build:all": "npm run build  &&  cd functions  &&  npm i  &&  cd ..  &&  npm run lint:functions",

    "//serve-static": "Serves pre-built production front-end assets",
    "serve-static": "serve ./out",

    "//start": "Runs a front-end production server",
    "start": "next start",
    
    "lint": "next lint",
    "lint:functions": "cd functions && npm run lint",


    "//------- ENVIRONMENT SWITCHING ---------": "Switching & setting several aspects such as git branch, Firebase CLI context, and Firebase config as an atomic-like action",
    "//switch-to-dev": "Switches to a 'dev environment', which involves a git branch, firebase CLI project context for the staging project, and grabbing the Firebase config for that project.",
    "switch-to-dev": "git checkout dev  &&  firebase use staging  &&  npm run get-firebase-config  &&  echo \"Switched to DEV environment (git branch, Firebase CLI project context, Firebase project config for code).  You should normally run a script which runs the emulators but if you don't then code will connect to the STAGING backend.\"",
    
    "//switch-to-staging": "Switches to a 'staging environment', which involves a git branch, firebase CLI project context for the staging project, and grabbing the Firebase config for that project.",
    "switch-to-staging": "git checkout staging  &&  firebase use staging  &&  npm run get-firebase-config  &&  echo 'Switched to STAGING environment (git branch, Firebase CLI project context, Firebase project config for code)'",
    
    "//switch-to-prod": "Switches to a 'production environment', which involves a git branch, firebase CLI project context for the production project, and grabbing the Firebase config for that project.",
    "switch-to-prod": "git checkout main  &&  firebase use prod  &&  npm run get-firebase-config  &&  echo 'Switched to PROD environment (git branch, Firebase CLI project context, Firebase project config for code)'"
  },
  "dependencies": {
    "@emotion/react": "^11.8.1",
    "@emotion/styled": "^11.8.1",
    "@mui/icons-material": "^5.4.2",
    "@mui/material": "^5.4.3",
    "@mui/styled-engine-sc": "^5.4.2",
    "firebase": "^9.6.7",
    "next": "12.1.0",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "react-firebase-hooks": "^5.0.3",
    "styled-components": "^5.3.3"
  },
  "devDependencies": {
    "eslint": "8.9.0",
    "eslint-config-next": "12.1.0",
    "npm-run-all": "^4.1.5"
  }
}
